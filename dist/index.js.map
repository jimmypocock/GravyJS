{"version":3,"file":"index.js","sources":["../src/components/Toolbar.jsx","../src/components/Editor.jsx","../src/components/SnippetDropdown.jsx","../src/hooks/useSelection.js","../src/hooks/useFormatting.js","../src/hooks/useVariables.js","../src/hooks/useKeyboardShortcuts.js","../src/hooks/useClipboard.js","../src/hooks/useEditorContent.js","../src/GravyJS.js"],"sourcesContent":["import React from 'react';\n\nconst Toolbar = ({\n  onBold,\n  onItalic,\n  onUnderline,\n  onBulletList,\n  onNumberedList,\n  onCreateLink,\n  onInsertVariable,\n  onToggleSnippets,\n  showSnippets,\n  variablePrefix,\n  variableSuffix,\n  onKeyDown\n}) => {\n  return (\n    <div\n      className=\"gravy-toolbar\"\n      role=\"toolbar\"\n      aria-label=\"Text formatting tools\"\n      onKeyDown={onKeyDown}\n    >\n      <button\n        onClick={onBold}\n        className=\"toolbar-btn\"\n        title=\"Bold (Ctrl+B)\"\n        aria-label=\"Toggle bold formatting\"\n        type=\"button\"\n      >\n        <strong>B</strong>\n      </button>\n      <button\n        onClick={onItalic}\n        className=\"toolbar-btn\"\n        title=\"Italic (Ctrl+I)\"\n        aria-label=\"Toggle italic formatting\"\n        type=\"button\"\n      >\n        <em>I</em>\n      </button>\n      <button\n        onClick={onUnderline}\n        className=\"toolbar-btn\"\n        title=\"Underline (Ctrl+U)\"\n        aria-label=\"Toggle underline formatting\"\n        type=\"button\"\n      >\n        <u>U</u>\n      </button>\n      <div className=\"toolbar-divider\" aria-hidden=\"true\"></div>\n      <button\n        onClick={onBulletList}\n        className=\"toolbar-btn\"\n        title=\"Bullet List\"\n        aria-label=\"Insert bullet list\"\n        type=\"button\"\n      >\n        •\n      </button>\n      <button\n        onClick={onNumberedList}\n        className=\"toolbar-btn\"\n        title=\"Numbered List\"\n        aria-label=\"Insert numbered list\"\n        type=\"button\"\n      >\n        1.\n      </button>\n      <div className=\"toolbar-divider\" aria-hidden=\"true\"></div>\n      <button\n        onClick={onCreateLink}\n        className=\"toolbar-btn\"\n        title=\"Insert Link\"\n        aria-label=\"Insert hyperlink\"\n        type=\"button\"\n      >\n        🔗\n      </button>\n      <button\n        onClick={onInsertVariable}\n        className=\"toolbar-btn\"\n        title=\"Insert Variable\"\n        aria-label={`Insert variable placeholder using ${variablePrefix}${variableSuffix} format`}\n        type=\"button\"\n      >\n        {variablePrefix}{variableSuffix}\n      </button>\n      <button\n        onClick={onToggleSnippets}\n        className=\"toolbar-btn\"\n        title=\"Insert Snippet\"\n        aria-label=\"Insert text snippet\"\n        aria-expanded={showSnippets}\n        type=\"button\"\n      >\n        📝\n      </button>\n    </div>\n  );\n};\n\nexport default Toolbar;","import React, { forwardRef, useCallback } from 'react';\n\nconst Editor = forwardRef(({\n  placeholder,\n  className = '',\n  onInput,\n  onKeyDown,\n  onMouseUp,\n  'aria-label': ariaLabel\n}, ref) => {\n  // Debounced input handler\n  let inputTimeout;\n  const handleInput = useCallback((e) => {\n    clearTimeout(inputTimeout);\n    inputTimeout = setTimeout(() => {\n      if (onInput) {\n        onInput(e);\n      }\n    }, 100);\n  }, [onInput]);\n\n  return (\n    <div\n      ref={ref}\n      className={`gravy-content ${className}`}\n      contentEditable\n      suppressContentEditableWarning={true}\n      onInput={handleInput}\n      onKeyDown={onKeyDown}\n      onMouseUp={onMouseUp}\n      data-placeholder={placeholder}\n      role=\"textbox\"\n      aria-multiline=\"true\"\n      aria-label={ariaLabel || placeholder}\n      tabIndex={0}\n    />\n  );\n});\n\nEditor.displayName = 'Editor';\n\nexport default Editor;","import React, { useState, useEffect } from 'react';\n\nconst SnippetDropdown = ({\n  snippets,\n  onInsertSnippet,\n  onClose,\n  isVisible\n}) => {\n  const [snippetSearch, setSnippetSearch] = useState('');\n\n  // Filter snippets with error handling\n  const filteredSnippets = snippets.filter(snippet => {\n    try {\n      return snippet.title.toLowerCase().includes(snippetSearch.toLowerCase()) ||\n        snippet.content.toLowerCase().includes(snippetSearch.toLowerCase());\n    } catch (error) {\n      console.error('Error filtering snippets:', error);\n      return false;\n    }\n  });\n\n  // Handle snippet insertion\n  const handleSnippetClick = (snippet) => {\n    onInsertSnippet(snippet);\n    setSnippetSearch('');\n  };\n\n  // Handle keyboard navigation for snippets\n  const handleSnippetKeyDown = (e, snippet) => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      handleSnippetClick(snippet);\n    }\n  };\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      try {\n        const snippetDropdown = event.target.closest('.gravy-snippets-dropdown');\n        const snippetButton = event.target.closest('.toolbar-btn[title=\"Insert Snippet\"]');\n\n        if (!snippetDropdown && !snippetButton) {\n          onClose();\n        }\n      } catch (error) {\n        console.error('Error handling click outside:', error);\n      }\n    };\n\n    if (isVisible) {\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => document.removeEventListener('mousedown', handleClickOutside);\n    }\n  }, [isVisible, onClose]);\n\n  // Reset search when dropdown closes\n  useEffect(() => {\n    if (!isVisible) {\n      setSnippetSearch('');\n    }\n  }, [isVisible]);\n\n  if (!isVisible) return null;\n\n  return (\n    <div className=\"gravy-snippets-dropdown\" role=\"listbox\" aria-label=\"Available snippets\">\n      <input\n        type=\"text\"\n        placeholder=\"Search snippets...\"\n        value={snippetSearch}\n        onChange={(e) => setSnippetSearch(e.target.value)}\n        className=\"snippet-search\"\n        autoFocus\n        aria-label=\"Search snippets\"\n      />\n      <div className=\"snippet-list\">\n        {filteredSnippets.length > 0 ? (\n          filteredSnippets.map((snippet, index) => (\n            <div\n              key={index}\n              className=\"snippet-item\"\n              onClick={() => handleSnippetClick(snippet)}\n              role=\"option\"\n              tabIndex={0}\n              onKeyDown={(e) => handleSnippetKeyDown(e, snippet)}\n              aria-label={`Insert snippet: ${snippet.title}`}\n            >\n              <div className=\"snippet-title\">{snippet.title}</div>\n              <div className=\"snippet-preview\">\n                {snippet.content.replace(/<[^>]*>/g, '').substring(0, 50)}...\n              </div>\n            </div>\n          ))\n        ) : (\n          <div className=\"snippet-item snippet-empty\" role=\"option\">\n            No snippets found\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SnippetDropdown;","import { useState, useCallback } from 'react';\n\nexport const useSelection = (editorRef) => {\n  const [currentRange, setCurrentRange] = useState(null);\n\n  // Save the current text selection/range for later restoration\n  const saveSelection = useCallback(() => {\n    try {\n      const selection = window.getSelection();\n      if (selection && selection.rangeCount > 0) {\n        setCurrentRange(selection.getRangeAt(0).cloneRange());\n      }\n    } catch (error) {\n      console.error('Error saving selection:', error);\n    }\n  }, []);\n\n  // Restore a previously saved text selection/range\n  const restoreSelection = useCallback(() => {\n    try {\n      if (currentRange && editorRef.current) {\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n\n        try {\n          selection.addRange(currentRange);\n        } catch (error) {\n          // If the range is invalid, position cursor at end\n          const newRange = document.createRange();\n          newRange.selectNodeContents(editorRef.current);\n          newRange.collapse(false);\n          selection.addRange(newRange);\n        }\n      }\n    } catch (error) {\n      console.error('Error restoring selection:', error);\n    }\n  }, [currentRange, editorRef]);\n\n  // Handle mouse up events to automatically save the current selection\n  const handleMouseUp = useCallback(() => {\n    saveSelection();\n  }, [saveSelection]);\n\n  return {\n    currentRange,\n    saveSelection,\n    restoreSelection,\n    handleMouseUp\n  };\n};","import { useCallback } from 'react';\n\nexport const useFormatting = (editorRef, updateContent, saveSelection, restoreSelection) => {\n  // Apply HTML formatting (bold, italic, etc.) to the currently selected text\n  const applyFormat = useCallback((tag, attributes = {}) => {\n    try {\n      saveSelection();\n      const selection = window.getSelection();\n      if (!selection || selection.rangeCount === 0) return;\n\n      const range = selection.getRangeAt(0);\n      if (range.collapsed) return;\n\n      const element = document.createElement(tag);\n      Object.entries(attributes).forEach(([key, value]) => {\n        element.setAttribute(key, value);\n      });\n\n      try {\n        range.surroundContents(element);\n      } catch (e) {\n        // Fallback if range spans multiple elements\n        element.appendChild(range.extractContents());\n        range.insertNode(element);\n      }\n\n      selection.removeAllRanges();\n      updateContent();\n      restoreSelection();\n    } catch (error) {\n      console.error('Error applying format:', error);\n    }\n  }, [saveSelection, restoreSelection, updateContent]);\n\n  // Toggle bold formatting on selected text\n  const toggleBold = useCallback(() => applyFormat('strong'), [applyFormat]);\n  \n  // Toggle italic formatting on selected text\n  const toggleItalic = useCallback(() => applyFormat('em'), [applyFormat]);\n  \n  // Toggle underline formatting on selected text\n  const toggleUnderline = useCallback(() => applyFormat('u'), [applyFormat]);\n\n  // Insert a list (ordered or unordered) at the current cursor position\n  const insertList = useCallback((ordered = false) => {\n    try {\n      saveSelection();\n      const selection = window.getSelection();\n      if (!selection || selection.rangeCount === 0) return;\n\n      const range = selection.getRangeAt(0);\n      const listElement = document.createElement(ordered ? 'ol' : 'ul');\n      const listItem = document.createElement('li');\n\n      if (range.collapsed) {\n        listItem.appendChild(document.createTextNode('\\u00A0'));\n      } else {\n        listItem.appendChild(range.extractContents());\n      }\n\n      listElement.appendChild(listItem);\n      range.insertNode(listElement);\n\n      // Position cursor in the list item\n      const newRange = document.createRange();\n      newRange.setStart(listItem, listItem.childNodes.length);\n      newRange.collapse(true);\n      selection.removeAllRanges();\n      selection.addRange(newRange);\n\n      updateContent();\n    } catch (error) {\n      console.error('Error inserting list:', error);\n    }\n  }, [saveSelection, updateContent]);\n\n  // Insert an unordered (bullet) list\n  const insertBulletList = useCallback(() => insertList(false), [insertList]);\n  \n  // Insert an ordered (numbered) list\n  const insertNumberedList = useCallback(() => insertList(true), [insertList]);\n\n  // Validate if a string is a valid URL (with protocol auto-detection)\n  const isValidUrl = useCallback((string) => {\n    try {\n      new URL(string);\n      return true;\n    } catch (_) {\n      // Try adding protocol if missing\n      try {\n        new URL('https://' + string);\n        return true;\n      } catch (_) {\n        return false;\n      }\n    }\n  }, []);\n\n  // Create a hyperlink from the currently selected text\n  const createLink = useCallback(() => {\n    try {\n      saveSelection();\n      const selection = window.getSelection();\n      if (!selection || selection.rangeCount === 0 || selection.toString() === '') {\n        alert('Please select some text first');\n        return;\n      }\n\n      const url = prompt('Enter URL:');\n      if (url && isValidUrl(url)) {\n        restoreSelection();\n        applyFormat('a', { href: url });\n      } else if (url) {\n        alert('Please enter a valid URL (e.g., https://example.com)');\n      }\n    } catch (error) {\n      console.error('Error creating link:', error);\n    }\n  }, [saveSelection, restoreSelection, applyFormat, isValidUrl]);\n\n  return {\n    toggleBold,\n    toggleItalic,\n    toggleUnderline,\n    insertBulletList,\n    insertNumberedList,\n    createLink,\n    applyFormat\n  };\n};","import { useCallback } from 'react';\n\nexport const useVariables = (editorRef, variablePrefix, variableSuffix, onVariablePrompt) => {\n  // Escape HTML content to prevent XSS attacks\n  const escapeHtml = useCallback((text) => {\n    try {\n      const div = document.createElement('div');\n      div.textContent = text;\n      return div.innerHTML;\n    } catch (error) {\n      console.error('Error escaping HTML:', error);\n      return String(text).replace(/[&<>\"']/g, (char) => {\n        const entities = {\n          '&': '&amp;',\n          '<': '&lt;',\n          '>': '&gt;',\n          '\"': '&quot;',\n          \"'\": '&#39;'\n        };\n        return entities[char];\n      });\n    }\n  }, []);\n\n  // Extract plain text content from HTML, removing all tags\n  const extractPlainText = useCallback((html) => {\n    try {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = html;\n      return tempDiv.textContent || tempDiv.innerText || '';\n    } catch (error) {\n      console.error('Error extracting plain text:', error);\n      return '';\n    }\n  }, []);\n\n  // Find all variables in the editor content using regex pattern matching\n  const getAllVariables = useCallback(() => {\n    if (!editorRef.current) return [];\n\n    try {\n      // Get both HTML and plain text content for comprehensive detection\n      const htmlContent = editorRef.current.innerHTML || '';\n      const textContent = editorRef.current.textContent || '';\n\n      // Escape delimiters for regex\n      const escapedPrefix = variablePrefix.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n      const escapedSuffix = variableSuffix.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n      const regex = new RegExp(`${escapedPrefix}([a-zA-Z_][a-zA-Z0-9_]*)${escapedSuffix}`, 'g');\n\n      const variables = new Set();\n\n      // Check both HTML and text content\n      [htmlContent, textContent].forEach(content => {\n        let match;\n        while ((match = regex.exec(content)) !== null) {\n          variables.add(match[1]);\n        }\n      });\n\n      return Array.from(variables);\n    } catch (error) {\n      console.error('Error extracting variables:', error);\n      return [];\n    }\n  }, [editorRef, variablePrefix, variableSuffix]);\n\n  // Replace variables in editor content with provided values\n  const generatePopulatedContent = useCallback((variableValues) => {\n    if (!editorRef.current) return '';\n\n    try {\n      let content = editorRef.current.innerHTML;\n\n      // Replace each variable with its value\n      for (const [variable, value] of Object.entries(variableValues)) {\n        const escapedPrefix = variablePrefix.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        const escapedSuffix = variableSuffix.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        const regex = new RegExp(`${escapedPrefix}${variable}${escapedSuffix}`, 'g');\n\n        // Escape HTML to prevent XSS\n        const escapedValue = escapeHtml(value);\n        content = content.replace(regex, escapedValue);\n      }\n\n      return content;\n    } catch (error) {\n      console.error('Error generating populated content:', error);\n      return '';\n    }\n  }, [editorRef, variablePrefix, variableSuffix, escapeHtml]);\n\n  // Prompt user for variable values and generate populated content\n  const populateVariables = useCallback(async () => {\n    try {\n      const variables = getAllVariables();\n\n      if (variables.length === 0) {\n        alert(`No variables found in the template. Insert variables using the format ${variablePrefix}variable_name${variableSuffix}`);\n        return null;\n      }\n\n      const variableValues = {};\n      let allValuesProvided = true;\n\n      // Prompt for each variable value using custom or default prompt\n      for (const variable of variables) {\n        let value;\n        \n        if (onVariablePrompt) {\n          // Use custom prompt function provided by user\n          try {\n            value = await onVariablePrompt(variable, variablePrefix, variableSuffix);\n          } catch (error) {\n            console.error('Error with custom variable prompt:', error);\n            return null;\n          }\n        } else {\n          // Fall back to browser prompt\n          value = prompt(`Enter value for ${variablePrefix}${variable}${variableSuffix}:`);\n        }\n        \n        if (value === null || value === undefined) {\n          // User cancelled\n          return null;\n        }\n        if (value === '') {\n          allValuesProvided = false;\n        }\n        variableValues[variable] = String(value);\n      }\n\n      if (!allValuesProvided) {\n        const proceed = confirm('Some variables were left empty. Continue anyway?');\n        if (!proceed) return null;\n      }\n\n      // Generate the populated content\n      const populatedContent = generatePopulatedContent(variableValues);\n\n      return {\n        html: populatedContent,\n        variables: variableValues,\n        plainText: extractPlainText(populatedContent)\n      };\n    } catch (error) {\n      console.error('Error populating variables:', error);\n      alert('An error occurred while populating variables. Please try again.');\n      return null;\n    }\n  }, [getAllVariables, generatePopulatedContent, extractPlainText, variablePrefix, variableSuffix, onVariablePrompt]);\n\n  // Insert a new variable placeholder at the current cursor position\n  const insertVariable = useCallback((currentRange, saveSelection, restoreSelection, updateContent) => {\n    try {\n      saveSelection();\n      const variableName = prompt('Enter variable name:');\n      if (!variableName || !variableName.trim()) return;\n\n      // Input validation - only allow valid variable names\n      const trimmedName = variableName.trim();\n      if (!/^[a-zA-Z_][a-zA-Z0-9_]*$/.test(trimmedName)) {\n        alert('Variable names must start with a letter or underscore and contain only letters, numbers, and underscores.');\n        return;\n      }\n\n      const selection = window.getSelection();\n      if (currentRange) {\n        selection.removeAllRanges();\n        selection.addRange(currentRange);\n      }\n\n      const range = selection.rangeCount > 0 ? selection.getRangeAt(0) : null;\n\n      if (range) {\n        // Insert as plain text (bulletproof approach)\n        const variableText = `${variablePrefix}${trimmedName}${variableSuffix}`;\n        const textNode = document.createTextNode(variableText);\n\n        range.deleteContents();\n        range.insertNode(textNode);\n\n        // Move cursor after the variable\n        const newRange = document.createRange();\n        newRange.setStartAfter(textNode);\n        newRange.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(newRange);\n\n        updateContent();\n      }\n    } catch (error) {\n      console.error('Error inserting variable:', error);\n      alert('An error occurred while inserting the variable.');\n    }\n  }, [variablePrefix, variableSuffix]);\n\n  return {\n    getAllVariables,\n    generatePopulatedContent,\n    populateVariables,\n    insertVariable,\n    extractPlainText,\n    escapeHtml\n  };\n};","import { useCallback } from 'react';\n\nexport const useKeyboardShortcuts = (editorRef, handlers) => {\n  const {\n    toggleBold,\n    toggleItalic,\n    toggleUnderline,\n    onToolbarFocus\n  } = handlers;\n\n  // Handle keyboard shortcuts (Ctrl+B, Ctrl+I, Ctrl+U) and accessibility features\n  const handleKeyDown = useCallback((e) => {\n    try {\n      // Keyboard shortcuts\n      if (e.ctrlKey || e.metaKey) {\n        switch (e.key) {\n          case 'b':\n            e.preventDefault();\n            toggleBold();\n            break;\n          case 'i':\n            e.preventDefault();\n            toggleItalic();\n            break;\n          case 'u':\n            e.preventDefault();\n            toggleUnderline();\n            break;\n          default:\n            break;\n        }\n      }\n\n      // Accessibility: Handle toolbar navigation with keyboard (F10)\n      if (e.key === 'F10' && e.target === editorRef.current) {\n        e.preventDefault();\n        if (onToolbarFocus) {\n          onToolbarFocus();\n        }\n      }\n    } catch (error) {\n      console.error('Error handling key down:', error);\n    }\n  }, [toggleBold, toggleItalic, toggleUnderline, onToolbarFocus, editorRef]);\n\n  // Handle arrow key navigation within the toolbar for accessibility\n  const handleToolbarKeyDown = useCallback((e) => {\n    try {\n      if (e.key === 'ArrowRight' || e.key === 'ArrowLeft') {\n        const buttons = Array.from(document.querySelectorAll('.gravy-toolbar .toolbar-btn'));\n        const currentIndex = buttons.indexOf(e.target);\n\n        if (currentIndex !== -1) {\n          e.preventDefault();\n          let nextIndex = currentIndex + (e.key === 'ArrowRight' ? 1 : -1);\n          if (nextIndex >= buttons.length) nextIndex = 0;\n          if (nextIndex < 0) nextIndex = buttons.length - 1;\n          buttons[nextIndex].focus();\n        }\n      } else if (e.key === 'Escape') {\n        e.preventDefault();\n        editorRef.current?.focus();\n      }\n    } catch (error) {\n      console.error('Error handling toolbar keyboard navigation:', error);\n    }\n  }, [editorRef]);\n\n  return {\n    handleKeyDown,\n    handleToolbarKeyDown\n  };\n};","import { useCallback } from 'react';\n\nexport const useClipboard = () => {\n  // Copy content to clipboard with formatting, supporting modern and legacy browsers\n  const copyToClipboard = useCallback(async (content) => {\n    try {\n      if (!content) {\n        throw new Error('No content to copy');\n      }\n\n      // Try modern Clipboard API with both HTML and plain text\n      if (navigator.clipboard && navigator.clipboard.write) {\n        const clipboardItem = new ClipboardItem({\n          'text/html': new Blob([content.html], { type: 'text/html' }),\n          'text/plain': new Blob([content.plainText], { type: 'text/plain' })\n        });\n        await navigator.clipboard.write([clipboardItem]);\n        return true;\n      }\n\n      // Fallback to plain text only\n      if (navigator.clipboard && navigator.clipboard.writeText) {\n        await navigator.clipboard.writeText(content.plainText);\n        return true;\n      }\n\n      // Final fallback for older browsers\n      const textArea = document.createElement('textarea');\n      textArea.value = content.plainText;\n      textArea.style.position = 'fixed';\n      textArea.style.opacity = '0';\n      document.body.appendChild(textArea);\n      textArea.select();\n      const success = document.execCommand('copy');\n      document.body.removeChild(textArea);\n      return success;\n    } catch (error) {\n      console.error('Error copying to clipboard:', error);\n      return false;\n    }\n  }, []);\n\n  return {\n    copyToClipboard\n  };\n};","import { useState, useRef, useCallback, useEffect } from 'react';\n\nexport const useEditorContent = (initialValue, onChange) => {\n  const [content, setContent] = useState(initialValue);\n  const editorRef = useRef(null);\n  const isUpdatingRef = useRef(false);\n\n  // Update the content state when editor content changes\n  const updateContent = useCallback(() => {\n    if (editorRef.current && !isUpdatingRef.current) {\n      try {\n        const newContent = editorRef.current.innerHTML;\n        setContent(newContent);\n        if (onChange) {\n          onChange(newContent);\n        }\n      } catch (error) {\n        console.error('Error updating content:', error);\n      }\n    }\n  }, [onChange]);\n\n  // Set editor content programmatically (used by the ref API)\n  const setEditorContent = useCallback((newContent) => {\n    try {\n      if (editorRef.current) {\n        isUpdatingRef.current = true;\n        editorRef.current.innerHTML = newContent || '';\n        setContent(newContent || '');\n        if (onChange) {\n          onChange(newContent || '');\n        }\n        isUpdatingRef.current = false;\n      }\n    } catch (error) {\n      console.error('Error setting content:', error);\n    }\n  }, [onChange]);\n\n  // Get the current HTML content from the editor\n  const getContent = useCallback(() => {\n    return editorRef.current ? editorRef.current.innerHTML : '';\n  }, []);\n\n  // Set initial content with error handling\n  useEffect(() => {\n    try {\n      if (editorRef.current && initialValue && !content) {\n        isUpdatingRef.current = true;\n        editorRef.current.innerHTML = initialValue;\n        setContent(initialValue);\n        isUpdatingRef.current = false;\n      }\n    } catch (error) {\n      console.error('Error setting initial content:', error);\n    }\n  }, [initialValue, content]);\n\n  return {\n    content,\n    editorRef,\n    updateContent,\n    setEditorContent,\n    getContent\n  };\n};","import React, { useState, useImperativeHandle, forwardRef, useCallback } from 'react';\nimport Toolbar from './components/Toolbar.jsx';\nimport Editor from './components/Editor.jsx';\nimport SnippetDropdown from './components/SnippetDropdown.jsx';\nimport { useSelection } from './hooks/useSelection.js';\nimport { useFormatting } from './hooks/useFormatting.js';\nimport { useVariables } from './hooks/useVariables.js';\nimport { useKeyboardShortcuts } from './hooks/useKeyboardShortcuts.js';\nimport { useClipboard } from './hooks/useClipboard.js';\nimport { useEditorContent } from './hooks/useEditorContent.js';\nimport './GravyJS.css';\n\nconst GravyJS = forwardRef(({\n  initialValue = '',\n  onChange,\n  snippets = [],\n  placeholder = 'Start typing...',\n  className = '',\n  variablePrefix = '[[',\n  variableSuffix = ']]',\n  onVariablePrompt\n}, ref) => {\n  const [showSnippets, setShowSnippets] = useState(false);\n\n  // Custom hooks\n  const { content, editorRef, updateContent, setEditorContent, getContent } = useEditorContent(initialValue, onChange);\n  const { currentRange, saveSelection, restoreSelection, handleMouseUp } = useSelection(editorRef);\n  const { populateVariables, insertVariable, getAllVariables, generatePopulatedContent } = useVariables(\n    editorRef,\n    variablePrefix,\n    variableSuffix,\n    onVariablePrompt\n  );\n  const {\n    toggleBold,\n    toggleItalic,\n    toggleUnderline,\n    insertBulletList,\n    insertNumberedList,\n    createLink\n  } = useFormatting(editorRef, updateContent, saveSelection, restoreSelection);\n  const { copyToClipboard } = useClipboard();\n\n  // Focus the first button in the toolbar (used for F10 accessibility)\n  const handleToolbarFocus = useCallback(() => {\n    const firstToolbarButton = document.querySelector('.gravy-toolbar .toolbar-btn');\n    if (firstToolbarButton) {\n      firstToolbarButton.focus();\n    }\n  }, []);\n\n  const { handleKeyDown, handleToolbarKeyDown } = useKeyboardShortcuts(editorRef, {\n    toggleBold,\n    toggleItalic,\n    toggleUnderline,\n    onToolbarFocus: handleToolbarFocus\n  });\n\n  // Insert a snippet's content at the current cursor position\n  const insertSnippet = useCallback((snippet) => {\n    try {\n      saveSelection();\n      const selection = window.getSelection();\n\n      if (currentRange) {\n        selection.removeAllRanges();\n        selection.addRange(currentRange);\n      }\n\n      const range = selection.rangeCount > 0 ? selection.getRangeAt(0) : null;\n\n      if (range) {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = snippet.content;\n\n        const fragment = document.createDocumentFragment();\n        while (tempDiv.firstChild) {\n          fragment.appendChild(tempDiv.firstChild);\n        }\n\n        range.deleteContents();\n        range.insertNode(fragment);\n\n        // Move cursor to end of inserted content\n        const newRange = document.createRange();\n        newRange.setStartAfter(fragment);\n        newRange.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(newRange);\n      }\n\n      setShowSnippets(false);\n      updateContent();\n    } catch (error) {\n      console.error('Error inserting snippet:', error);\n    }\n  }, [saveSelection, currentRange, updateContent]);\n\n  // Handle the variable insertion button click\n  const handleInsertVariable = useCallback(() => {\n    insertVariable(currentRange, saveSelection, restoreSelection, updateContent);\n  }, [insertVariable, currentRange, saveSelection, restoreSelection, updateContent]);\n\n  // Toggle the snippet dropdown visibility\n  const handleToggleSnippets = useCallback(() => {\n    setShowSnippets(!showSnippets);\n  }, [showSnippets]);\n\n  // Close the snippet dropdown\n  const handleCloseSnippets = useCallback(() => {\n    setShowSnippets(false);\n  }, []);\n\n  // Handle input events from the editor and update content\n  const handleEditorInput = useCallback(() => {\n    updateContent();\n  }, [updateContent]);\n\n  // Expose methods through ref\n  useImperativeHandle(ref, () => ({\n    populateVariables,\n    getContent,\n    setContent: setEditorContent,\n    getAllVariables,\n    generatePopulatedContent,\n    copyToClipboard\n  }), [populateVariables, getContent, setEditorContent, getAllVariables, generatePopulatedContent, copyToClipboard]);\n\n  return (\n    <div className={`gravy-editor ${className}`}>\n      <Toolbar\n        onBold={toggleBold}\n        onItalic={toggleItalic}\n        onUnderline={toggleUnderline}\n        onBulletList={insertBulletList}\n        onNumberedList={insertNumberedList}\n        onCreateLink={createLink}\n        onInsertVariable={handleInsertVariable}\n        onToggleSnippets={handleToggleSnippets}\n        showSnippets={showSnippets}\n        variablePrefix={variablePrefix}\n        variableSuffix={variableSuffix}\n        onKeyDown={handleToolbarKeyDown}\n      />\n\n      <Editor\n        ref={editorRef}\n        placeholder={placeholder}\n        onInput={handleEditorInput}\n        onKeyDown={handleKeyDown}\n        onMouseUp={handleMouseUp}\n        aria-label={placeholder}\n      />\n\n      <SnippetDropdown\n        snippets={snippets}\n        onInsertSnippet={insertSnippet}\n        onClose={handleCloseSnippets}\n        isVisible={showSnippets}\n      />\n    </div>\n  );\n});\n\nGravyJS.displayName = 'GravyJS';\n\nexport default GravyJS;"],"names":["Toolbar","_ref","onBold","onItalic","onUnderline","onBulletList","onNumberedList","onCreateLink","onInsertVariable","onToggleSnippets","showSnippets","variablePrefix","variableSuffix","onKeyDown","React","createElement","className","role","onClick","title","type","concat","Editor","forwardRef","ref","placeholder","_ref$className","onInput","onMouseUp","ariaLabel","inputTimeout","handleInput","useCallback","e","clearTimeout","setTimeout","contentEditable","suppressContentEditableWarning","tabIndex","displayName","SnippetDropdown","snippets","onInsertSnippet","onClose","isVisible","_useState","useState","_useState2","_slicedToArray","snippetSearch","setSnippetSearch","filteredSnippets","filter","snippet","toLowerCase","includes","content","error","console","handleSnippetClick","handleSnippetKeyDown","key","preventDefault","useEffect","handleClickOutside","event","snippetDropdown","target","closest","snippetButton","document","addEventListener","removeEventListener","value","onChange","autoFocus","length","map","index","replace","substring","useSelection","editorRef","currentRange","setCurrentRange","saveSelection","selection","window","getSelection","rangeCount","getRangeAt","cloneRange","restoreSelection","current","removeAllRanges","addRange","newRange","createRange","selectNodeContents","collapse","handleMouseUp","useFormatting","updateContent","applyFormat","tag","attributes","arguments","undefined","range","collapsed","element","Object","entries","forEach","_ref2","setAttribute","surroundContents","appendChild","extractContents","insertNode","toggleBold","toggleItalic","toggleUnderline","insertList","ordered","listElement","listItem","createTextNode","setStart","childNodes","insertBulletList","insertNumberedList","isValidUrl","string","URL","_","createLink","toString","alert","url","prompt","href","useVariables","onVariablePrompt","escapeHtml","text","div","textContent","innerHTML","String","char","entities","extractPlainText","html","tempDiv","innerText","getAllVariables","htmlContent","escapedPrefix","escapedSuffix","regex","RegExp","variables","Set","match","exec","add","Array","from","generatePopulatedContent","variableValues","_i","_Object$entries","_Object$entries$_i","variable","escapedValue","populateVariables","_asyncToGenerator","_regeneratorRuntime","mark","_callee","allValuesProvided","_iterator","_step","proceed","populatedContent","wrap","_callee$","_context","prev","next","abrupt","_createForOfIteratorHelper","s","n","done","sent","t0","t1","f","finish","confirm","plainText","t2","stop","insertVariable","variableName","trim","trimmedName","test","variableText","textNode","deleteContents","setStartAfter","useKeyboardShortcuts","handlers","onToolbarFocus","handleKeyDown","ctrlKey","metaKey","handleToolbarKeyDown","buttons","querySelectorAll","currentIndex","indexOf","nextIndex","focus","_editorRef$current","useClipboard","copyToClipboard","clipboardItem","textArea","success","Error","navigator","clipboard","write","ClipboardItem","Blob","writeText","style","position","opacity","body","select","execCommand","removeChild","_x","apply","useEditorContent","initialValue","setContent","useRef","isUpdatingRef","newContent","setEditorContent","getContent","GravyJS","_ref$initialValue","_ref$snippets","_ref$placeholder","_ref$variablePrefix","_ref$variableSuffix","setShowSnippets","_useEditorContent","_useSelection","_useVariables","_useFormatting","_useClipboard","handleToolbarFocus","firstToolbarButton","querySelector","_useKeyboardShortcuts","insertSnippet","fragment","createDocumentFragment","firstChild","handleInsertVariable","handleToggleSnippets","handleCloseSnippets","handleEditorInput","useImperativeHandle"],"mappings":"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"}